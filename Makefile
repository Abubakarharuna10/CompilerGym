.DEFAULT_GOAL := help

# Configurable paths to binaries.
CC ?= clang
CXX ?= clang++
BAZEL ?= bazel
PANDOC ?= pandoc
PYTHON ?= python3

# Bazel build options.
BAZEL_OPTS ?=
BAZEL_BUILD_OPTS ?= -c opt
BAZEL_TEST_OPTS ?=

COMPILER_GYM_SITE_DATA ?= "/tmp/compiler_gym/tests/site_data"
COMPILER_GYM_CACHE ?= "/tmp/compiler_gym/tests/cache"

this_dir := $(dir $(realpath $(firstword $(MAKEFILE_LIST))))

VERSION := $(shell cat VERSION)
OS := $(shell uname)

help:
	@echo "CompilerGym $(VERSION). Available targets:"
	@echo
	@echo "    make init       Install the python dependencies."
	@echo "    make test       Run the test suite."
	@echo "    make build      Build the python package."
	@echo "    make install    Install the python package."
	@echo "    make docs       Build the HTML documentation."
	@echo "    make livedocs   Auto-rebuild the HTML documentation."
	@echo "    make all        Build the python package and documentation."
	@echo "    make clean      Remove build artifacts."
	@echo "    make distclean  Clean up all build artifacts."

docs/source/changelog.rst: CHANGELOG.md
	echo "..\n  Generated from $<. Do not edit!\n" > $@
	echo "Changelog\n=========\n" >> $@
	$(PANDOC) --from=markdown --to=rst $< >> $@

docs/source/contributing.rst: CONTRIBUTING.md
	echo "..\n  Generated from $<. Do not edit!\n" > $@
	$(PANDOC) --from=markdown --to=rst $< >> $@

docs/source/installation.rst: README.md
	echo "..\n  Generated from $<. Do not edit!\n" > $@
	sed -n '/^## Installation/,$$p' $< | sed -n '/^## Trying/q;p' | $(PANDOC) --from=markdown --to=rst >> $@

GENERATED_DOCS := \
	docs/source/changelog.rst \
	docs/source/contributing.rst \
	docs/source/installation.rst \
	$(NULL)


# Files and directories generated by python disttools.
DISTTOOLS_OUTS := dist build compiler_gym.egg-info

all: docs build

init:
	$(PYTHON) -m pip install -r requirements.txt

docs: $(GENERATED_DOCS) install
	$(MAKE) -C docs html

livedocs: $(GENERATED_DOCS) install
	$(MAKE) -C docs livehtml

# Post-build shenanigans to ship libLLVMPolly.so and patch the RPATH.
LLVM_SERVICE_DIR := $(this_dir)/bazel-bin/package.runfiles/CompilerGym/compiler_gym/envs/llvm/service
LLVM_POLLY_SO := $(this_dir)/bazel-bin/external/clang-llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04/lib/libLLVMPolly.so

bazel-build:
	$(BAZEL) $(BAZEL_OPTS) build $(BAZEL_BUILD_OPTS) //:package
ifeq ($(OS),Linux)
	cp -f $(LLVM_POLLY_SO) $(LLVM_SERVICE_DIR)/libLLVMPolly.so
	chmod 666 $(LLVM_SERVICE_DIR)/service
	patchelf --set-rpath '$$ORIGIN' $(LLVM_SERVICE_DIR)/service
	chmod 555 $(LLVM_SERVICE_DIR)/service
endif

bazel-test:
	$(BAZEL) $(BAZEL_OPTS) test $(BAZEL_TEST_OPTS) //...

tests-datasets: install
	cd .. && python -m compiler_gym.bin.datasets --env=llvm-v0 --download=cBench-v0

install-test: install tests-datasets
	mkdir -p /tmp/compiler_gym/wheel_tests
	rm -f /tmp/compiler_gym/wheel_tests/tests
	ln -s $(this_dir)/tests /tmp/compiler_gym/wheel_tests
	cd /tmp/compiler_gym/wheel_tests && pytest tests

test: bazel-test install-test
	$(MAKE) -C examples/makefile_integration clean
	SEARCH_TIME=3 $(MAKE) -C examples/makefile_integration test

build: bazel-build
	$(PYTHON) setup.py bdist_wheel

install: bazel-build
	$(PYTHON) setup.py install

clean:
	$(MAKE) -C docs clean
	rm -rf $(GENERATED_DOCS) $(DISTTOOLS_OUTS)

distclean: clean
	bazel clean --expunge

.PHONY: help init docs livedocs clean distclean test install
